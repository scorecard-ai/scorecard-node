/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Scorecard from "../../api/index";
import * as core from "../../core";

export const ScoringConfig: core.serialization.ObjectSchema<serializers.ScoringConfig.Raw, Scorecard.ScoringConfig> =
    core.serialization.object({
        orgId: core.serialization.property("org_id", core.serialization.string().optional()),
        userId: core.serialization.property("user_id", core.serialization.string().optional()),
        id: core.serialization.number().optional(),
        name: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        config: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        isArchived: core.serialization.property("is_archived", core.serialization.boolean().optional()),
        metrics: core.serialization.list(core.serialization.number()).optional(),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        projectId: core.serialization.property("project_id", core.serialization.number().optional()),
    });

export declare namespace ScoringConfig {
    interface Raw {
        org_id?: string | null;
        user_id?: string | null;
        id?: number | null;
        name?: string | null;
        description?: string | null;
        config?: Record<string, unknown> | null;
        is_archived?: boolean | null;
        metrics?: number[] | null;
        created_at?: string | null;
        project_id?: number | null;
    }
}
