/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Scorecard from "../../../../../api/index";
import * as core from "../../../../../core";
import { TestrecordCreateParamsCustomInputsValue } from "../../types/TestrecordCreateParamsCustomInputsValue";
import { TestrecordCreateParamsCustomOutputsValue } from "../../types/TestrecordCreateParamsCustomOutputsValue";
import { TestrecordCreateParamsCustomLabelsValue } from "../../types/TestrecordCreateParamsCustomLabelsValue";
import { TestrecordCreateParamsModelParamsValue } from "../../types/TestrecordCreateParamsModelParamsValue";
import { TestrecordCreateParamsModelDebugInfoValue } from "../../types/TestrecordCreateParamsModelDebugInfoValue";

export const TestrecordCreateParams: core.serialization.Schema<
    serializers.TestrecordCreateParams.Raw,
    Scorecard.TestrecordCreateParams
> = core.serialization.object({
    testsetId: core.serialization.property("testset_id", core.serialization.number().optional()),
    testcaseId: core.serialization.property("testcase_id", core.serialization.number().optional()),
    userQuery: core.serialization.property("user_query", core.serialization.string().optional()),
    context: core.serialization.string().optional(),
    response: core.serialization.string().optional(),
    ideal: core.serialization.string().optional(),
    customInputs: core.serialization.property(
        "custom_inputs",
        core.serialization
            .record(core.serialization.string(), TestrecordCreateParamsCustomInputsValue.optional())
            .optional()
    ),
    customOutputs: core.serialization.property(
        "custom_outputs",
        core.serialization
            .record(core.serialization.string(), TestrecordCreateParamsCustomOutputsValue.optional())
            .optional()
    ),
    customLabels: core.serialization.property(
        "custom_labels",
        core.serialization
            .record(core.serialization.string(), TestrecordCreateParamsCustomLabelsValue.optional())
            .optional()
    ),
    prompt: core.serialization.string().optional(),
    modelParams: core.serialization.property(
        "model_params",
        core.serialization
            .record(core.serialization.string(), TestrecordCreateParamsModelParamsValue.optional())
            .optional()
    ),
    modelDebugInfo: core.serialization.property(
        "model_debug_info",
        core.serialization
            .record(core.serialization.string(), TestrecordCreateParamsModelDebugInfoValue.optional())
            .optional()
    ),
    errorMessage: core.serialization.property("error_message", core.serialization.string().optional()),
});

export declare namespace TestrecordCreateParams {
    interface Raw {
        testset_id?: number | null;
        testcase_id?: number | null;
        user_query?: string | null;
        context?: string | null;
        response?: string | null;
        ideal?: string | null;
        custom_inputs?: Record<string, TestrecordCreateParamsCustomInputsValue.Raw | null | undefined> | null;
        custom_outputs?: Record<string, TestrecordCreateParamsCustomOutputsValue.Raw | null | undefined> | null;
        custom_labels?: Record<string, TestrecordCreateParamsCustomLabelsValue.Raw | null | undefined> | null;
        prompt?: string | null;
        model_params?: Record<string, TestrecordCreateParamsModelParamsValue.Raw | null | undefined> | null;
        model_debug_info?: Record<string, TestrecordCreateParamsModelDebugInfoValue.Raw | null | undefined> | null;
        error_message?: string | null;
    }
}
